# Generated by Django 5.2.7 on 2025-10-28 00:36

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('finances', '0001_initial'),
        ('projects', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CategorieProduit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100, unique=True, verbose_name='Nom')),
                ('code', models.CharField(blank=True, max_length=20, null=True, unique=True, verbose_name='Code')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('actif', models.BooleanField(default=True, verbose_name='Actif')),
                ('ordre_affichage', models.IntegerField(default=0, verbose_name="Ordre d'affichage")),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
            ],
            options={
                'verbose_name': 'Catégorie de produit',
                'verbose_name_plural': 'Catégories de produits',
                'ordering': ['ordre_affichage', 'nom'],
            },
        ),
        migrations.CreateModel(
            name='UniteMessure',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=50, unique=True, verbose_name='Nom')),
                ('symbole', models.CharField(max_length=10, unique=True, verbose_name='Symbole')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('actif', models.BooleanField(default=True, verbose_name='Actif')),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
            ],
            options={
                'verbose_name': 'Unité de mesure',
                'verbose_name_plural': 'Unités de mesure',
                'ordering': ['nom'],
            },
        ),
        migrations.CreateModel(
            name='Achat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_achat', models.CharField(help_text='Généré automatiquement', max_length=50, unique=True, verbose_name="N° d'achat")),
                ('date_achat', models.DateField(verbose_name="Date d'achat")),
                ('date_reception', models.DateField(blank=True, null=True, verbose_name='Date de réception')),
                ('numero_facture', models.CharField(blank=True, max_length=100, null=True, verbose_name='N° facture fournisseur')),
                ('montant_total', models.DecimalField(decimal_places=2, default=0.0, help_text='Calculé automatiquement', max_digits=15, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Montant total')),
                ('mode_paiement', models.CharField(choices=[('Espèces', 'Espèces'), ('Chèque', 'Chèque'), ('Virement', 'Virement'), ('Mobile_Money', 'Mobile Money'), ('Crédit', 'Crédit')], max_length=20, verbose_name='Mode de paiement')),
                ('statut', models.CharField(choices=[('Brouillon', 'Brouillon'), ('Validé', 'Validé'), ('Reçu', 'Reçu'), ('Annulé', 'Annulé')], default='Brouillon', max_length=20, verbose_name='Statut')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notes')),
                ('piece_justificative', models.FileField(blank=True, null=True, upload_to='achats/', verbose_name='Pièce justificative')),
                ('date_validation', models.DateTimeField(blank=True, null=True, verbose_name='Date de validation')),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('date_modification', models.DateTimeField(auto_now=True, verbose_name='Date de modification')),
                ('fournisseur', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='achats', to='finances.fournisseur', verbose_name='Fournisseur')),
                ('projet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='achats', to='projects.projet', verbose_name='Projet')),
                ('saisi_par', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='achats_saisis', to=settings.AUTH_USER_MODEL, verbose_name='Saisi par')),
                ('valide_par', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='achats_valides', to=settings.AUTH_USER_MODEL, verbose_name='Validé par')),
            ],
            options={
                'verbose_name': 'Achat',
                'verbose_name_plural': 'Achats',
                'ordering': ['-date_achat', '-date_creation'],
            },
        ),
        migrations.CreateModel(
            name='Produit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code_produit', models.CharField(help_text='Généré automatiquement', max_length=50, unique=True, verbose_name='Code produit')),
                ('nom', models.CharField(max_length=200, verbose_name='Nom du produit')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('prix_unitaire_moyen', models.DecimalField(decimal_places=2, default=0.0, help_text='Calculé automatiquement', max_digits=15, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Prix unitaire moyen')),
                ('stock_minimum', models.DecimalField(decimal_places=2, default=0.0, help_text="Seuil d'alerte", max_digits=10, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Stock minimum')),
                ('actif', models.BooleanField(default=True, verbose_name='Actif')),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('date_modification', models.DateTimeField(auto_now=True, verbose_name='Date de modification')),
                ('categorie', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='produits', to='inventory.categorieproduit', verbose_name='Catégorie')),
                ('unite_mesure', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='produits', to='inventory.unitemessure', verbose_name='Unité de mesure')),
            ],
            options={
                'verbose_name': 'Produit',
                'verbose_name_plural': 'Produits',
                'ordering': ['nom'],
            },
        ),
        migrations.CreateModel(
            name='LigneAchat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantite', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0.01)], verbose_name='Quantité')),
                ('prix_unitaire', models.DecimalField(decimal_places=2, max_digits=15, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Prix unitaire')),
                ('montant_ligne', models.DecimalField(decimal_places=2, default=0.0, help_text='Calculé automatiquement', max_digits=15, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Montant')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notes')),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('achat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lignes', to='inventory.achat', verbose_name='Achat')),
                ('produit', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='lignes_achat', to='inventory.produit', verbose_name='Produit')),
            ],
            options={
                'verbose_name': "Ligne d'achat",
                'verbose_name_plural': "Lignes d'achat",
                'ordering': ['achat', 'id'],
            },
        ),
        migrations.CreateModel(
            name='Stock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantite_actuelle', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Quantité actuelle')),
                ('valeur_stock', models.DecimalField(decimal_places=2, default=0.0, help_text='Calculé automatiquement', max_digits=15, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Valeur du stock')),
                ('emplacement', models.CharField(blank=True, max_length=200, null=True, verbose_name='Emplacement')),
                ('date_derniere_entree', models.DateTimeField(blank=True, null=True, verbose_name='Dernière entrée')),
                ('date_derniere_sortie', models.DateTimeField(blank=True, null=True, verbose_name='Dernière sortie')),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('date_modification', models.DateTimeField(auto_now=True, verbose_name='Date de modification')),
                ('produit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stocks', to='inventory.produit', verbose_name='Produit')),
                ('projet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stocks', to='projects.projet', verbose_name='Projet')),
            ],
            options={
                'verbose_name': 'Stock',
                'verbose_name_plural': 'Stocks',
                'ordering': ['projet', 'produit'],
            },
        ),
        migrations.CreateModel(
            name='MouvementStock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_mouvement', models.CharField(choices=[('Entrée', 'Entrée'), ('Sortie', 'Sortie'), ('Ajustement', 'Ajustement'), ('Transfert', 'Transfert')], max_length=20, verbose_name='Type de mouvement')),
                ('quantite', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0.01)], verbose_name='Quantité')),
                ('quantite_avant', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, verbose_name='Quantité avant')),
                ('quantite_apres', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, verbose_name='Quantité après')),
                ('date_mouvement', models.DateTimeField(auto_now_add=True, verbose_name='Date du mouvement')),
                ('motif', models.TextField(blank=True, null=True, verbose_name='Motif')),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('achat', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='mouvements_stock', to='inventory.achat', verbose_name='Achat lié')),
                ('effectue_par', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='mouvements_stock_effectues', to=settings.AUTH_USER_MODEL, verbose_name='Effectué par')),
                ('projet_destination', models.ForeignKey(blank=True, help_text='Pour les transferts', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='mouvements_stock_recus', to='projects.projet', verbose_name='Projet destination')),
                ('stock', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mouvements', to='inventory.stock', verbose_name='Stock')),
            ],
            options={
                'verbose_name': 'Mouvement de stock',
                'verbose_name_plural': 'Mouvements de stock',
                'ordering': ['-date_mouvement'],
            },
        ),
        migrations.AddIndex(
            model_name='achat',
            index=models.Index(fields=['numero_achat'], name='inventory_a_numero__d28744_idx'),
        ),
        migrations.AddIndex(
            model_name='achat',
            index=models.Index(fields=['projet'], name='inventory_a_projet__6712a8_idx'),
        ),
        migrations.AddIndex(
            model_name='achat',
            index=models.Index(fields=['fournisseur'], name='inventory_a_fournis_60a108_idx'),
        ),
        migrations.AddIndex(
            model_name='achat',
            index=models.Index(fields=['date_achat'], name='inventory_a_date_ac_0a91bb_idx'),
        ),
        migrations.AddIndex(
            model_name='achat',
            index=models.Index(fields=['statut'], name='inventory_a_statut_c4eb13_idx'),
        ),
        migrations.AddIndex(
            model_name='stock',
            index=models.Index(fields=['projet'], name='inventory_s_projet__74b65f_idx'),
        ),
        migrations.AddIndex(
            model_name='stock',
            index=models.Index(fields=['produit'], name='inventory_s_produit_b2cd56_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='stock',
            unique_together={('projet', 'produit')},
        ),
        migrations.AddIndex(
            model_name='mouvementstock',
            index=models.Index(fields=['stock'], name='inventory_m_stock_i_3bc396_idx'),
        ),
        migrations.AddIndex(
            model_name='mouvementstock',
            index=models.Index(fields=['type_mouvement'], name='inventory_m_type_mo_67ec6b_idx'),
        ),
        migrations.AddIndex(
            model_name='mouvementstock',
            index=models.Index(fields=['date_mouvement'], name='inventory_m_date_mo_9620eb_idx'),
        ),
        migrations.AddIndex(
            model_name='produit',
            index=models.Index(fields=['code_produit'], name='inventory_p_code_pr_37e482_idx'),
        ),
        migrations.AddIndex(
            model_name='produit',
            index=models.Index(fields=['categorie'], name='inventory_p_categor_4a0c2a_idx'),
        ),
        migrations.AddIndex(
            model_name='produit',
            index=models.Index(fields=['nom'], name='inventory_p_nom_bc1ef5_idx'),
        ),
    ]
